# -*- coding: utf-8 -*-
"""AluraStoreBr.

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1B4fTLZK3V3GDsvQkFU9xEO3odB7ulLA8

### Importa√ß√£o dos dados
"""

import pandas as pd

url = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_1.csv"
url2 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_2.csv"
url3 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_3.csv"
url4 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_4.csv"

loja = pd.read_csv(url)
loja2 = pd.read_csv(url2)
loja3 = pd.read_csv(url3)
loja4 = pd.read_csv(url4)

loja.head()

"""#1. An√°lise do faturamento

"""

# @title Texto de t√≠tulo padr√£o

# Calcular o faturamento por categoria
loja['Faturamento'] = loja['Pre√ßo'] * loja['Quantidade de parcelas']

faturamento_por_categoria = loja.groupby('Categoria do Produto')['Faturamento'].sum()

# Exibir resultados
print(faturamento_por_categoria)

import matplotlib.pyplot as plt
import seaborn as sns

# Ajuste do tamanho do gr√°fico
plt.figure(figsize=(10, 6))

# Gr√°fico de barras
sns.barplot(x=faturamento_por_categoria.values, y=faturamento_por_categoria.index, palette="viridis")

# T√≠tulo e r√≥tulos
plt.title('Faturamento por Categoria de Produto')
plt.xlabel('Faturamento (R$)')
plt.ylabel('Categoria')

# Mostrar o gr√°fico
plt.tight_layout()
plt.show()



import matplotlib.pyplot as plt

# Dicion√°rio com os dados que voc√™ me passou
faturamento = {
    'brinquedos': 65412.04,
    'eletrodomesticos': 1376501.27,
    'eletronicos': 1720525.18,
    'esporte e lazer': 169179.18,
    'instrumentos musicais': 369322.34,
    'livros': 34360.24,
    'moveis': 777243.14,
    'utilidades domesticas': 51092.72
}

# Plotando gr√°fico de pizza
plt.figure(figsize=(10, 10))
plt.pie(faturamento.values(), labels=faturamento.keys(), autopct='%1.1f%%', startangle=140)
plt.title('Faturamento por Categoria de Produto')
plt.axis('equal')  # Mant√©m o c√≠rculo redondo
plt.show()

import pandas as pd
import matplotlib.pyplot as plt

# Caso ainda n√£o tenha unido todas as lojas:
loja_completa = pd.concat([loja, loja2, loja3, loja4])

# Garantir que os nomes das colunas n√£o tenham espa√ßos
loja_completa.columns = loja_completa.columns.str.strip()

# Converter avalia√ß√µes para n√∫mero (garantir que n√£o h√° textos ou NaN)
loja_completa['Avalia√ß√£o da compra'] = pd.to_numeric(loja_completa['Avalia√ß√£o da compra'], errors='coerce')

# Calcular m√©dia por vendedor
avaliacao_media = loja_completa.groupby('Vendedor')['Avalia√ß√£o da compra'].mean().sort_values(ascending=False)

# Exibir os valores no console
print(avaliacao_media)

import matplotlib.pyplot as plt

# Plotando gr√°fico de barras horizontais
plt.figure(figsize=(10, 6))
plt.barh(avaliacao_media.index, avaliacao_media.values, color='skyblue')
plt.xlabel('M√©dia de Avalia√ß√£o')
plt.title('M√©dia de Avalia√ß√£o por Vendedor')
plt.gca().invert_yaxis()  # Deixa o maior no topo
plt.grid(axis='x', linestyle='--', alpha=0.7)
plt.tight_layout()
plt.show()

"""# 4. Produtos Mais e Menos Vendidos"""

# Agrupando por produto e somando a quantidade de parcelas
produtos_vendidos = loja_completa.groupby('Produto')['Quantidade de parcelas'].sum().sort_values(ascending=False)

# Produtos mais vendidos (os que t√™m maior soma de quantidade de parcelas)
produtos_mais_vendidos = produtos_vendidos.head(10)

# Produtos menos vendidos (os que t√™m menor soma de quantidade de parcelas)
produtos_menos_vendidos = produtos_vendidos.tail(10)

# Exibindo os resultados
print("Produtos Mais Vendidos:")
print(produtos_mais_vendidos)

print("\nProdutos Menos Vendidos:")
print(produtos_menos_vendidos)

import matplotlib.pyplot as plt

# Dados dos produtos mais e menos vendidos
produtos_mais_vendidos = [
    ('Secadora de roupas', 649),
    ('C√¥moda', 627),
    ('Pandeiro', 625),
    ('Bicicleta', 614),
    ('Celular Plus X42', 611),
    ('Cama king', 603),
    ('Jogo de panelas', 601),
    ('Micro-ondas', 600),
    ('Bateria', 595),
    ('Viol√£o', 595)
]

produtos_menos_vendidos = [
    ('Guitarra', 497),
    ('Tablet ABXY', 497),
    ('Cubo m√°gico 8x8', 487),
    ('Boneca beb√™', 474),
    ('Mochila', 471),
    ('Mesa de centro', 469),
    ('Dinossauro Rex', 458),
    ('Celular ABXY', 447),
    ('Jogo de copos', 435),
    ('Smartwatch', 432)
]

# Convertendo para listas
produtos_mais_vendidos_nome = [produto[0] for produto in produtos_mais_vendidos]
produtos_mais_vendidos_quantidade = [produto[1] for produto in produtos_mais_vendidos]

produtos_menos_vendidos_nome = [produto[0] for produto in produtos_menos_vendidos]
produtos_menos_vendidos_quantidade = [produto[1] for produto in produtos_menos_vendidos]

# Criando gr√°ficos
fig, axes = plt.subplots(1, 2, figsize=(14, 7))

# Gr√°fico de barras horizontal para os mais vendidos
axes[0].barh(produtos_mais_vendidos_nome, produtos_mais_vendidos_quantidade, color='teal')
axes[0].set_title('Produtos Mais Vendidos')
axes[0].set_xlabel('Quantidade de Parcelas')
axes[0].invert_yaxis()  # Inverter para os maiores valores ficarem no topo

# Gr√°fico de barras horizontal para os menos vendidos
axes[1].barh(produtos_menos_vendidos_nome, produtos_menos_vendidos_quantidade, color='orange')
axes[1].set_title('Produtos Menos Vendidos')
axes[1].set_xlabel('Quantidade de Parcelas')
axes[1].invert_yaxis()  # Inverter para os menores valores ficarem no topo

# Ajustando o layout
plt.tight_layout()
plt.show()

"""# 5. Frete M√©dio por Loja

"""

import pandas as pd

# Carregar os dados
url = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_1.csv"
url2 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_2.csv"
url3 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_3.csv"
url4 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_4.csv"

loja = pd.read_csv(url)
loja2 = pd.read_csv(url2)
loja3 = pd.read_csv(url3)
loja4 = pd.read_csv(url4)

# Juntar os dataframes
dados = pd.concat([loja, loja2, loja3, loja4])

# Calcular o frete m√©dio por loja
frete_medio_por_loja = dados.groupby('Local da compra')['Frete'].mean()

# Mostrar o resultado
print(frete_medio_por_loja)

import matplotlib.pyplot as plt
import seaborn as sns

# Dados de frete m√©dio por estado
dados_frete = {
    'GO': 38.129811,
    'MA': 35.129564,
    'MG': 33.460381,
    'MS': 33.694141,
    'MT': 32.691573,
    'PA': 30.633504,
    'PB': 33.910674,
    'PE': 35.720970,
    'PI': 36.948903,
    'PR': 34.569335,
    'RJ': 33.935633,
    'RN': 40.090987,
    'RO': 46.347240,
    'RR': 113.673032,
    'RS': 36.582407,
    'SC': 29.838897,
    'SE': 30.487058,
    'SP': 32.709219,
    'TO': 33.462289
}

# Converter para DataFrame
import pandas as pd
frete_df = pd.DataFrame(list(dados_frete.items()), columns=['Estado', 'Frete'])

# Configurar o estilo do gr√°fico
sns.set(style="whitegrid")

# Criar o gr√°fico de barras
plt.figure(figsize=(12, 6))
ax = sns.barplot(x='Estado', y='Frete', data=frete_df, palette='viridis')

# Adicionar t√≠tulo e r√≥tulos
plt.title('Frete M√©dio por Estado', fontsize=16)
plt.xlabel('Estado', fontsize=12)
plt.ylabel('Frete M√©dio (R$)', fontsize=12)
plt.xticks(rotation=45)

# Exibir o gr√°fico
plt.tight_layout()
plt.show()

"""üõí Relat√≥rio do Projeto AluraStoreBr ‚Äî Desafio ONE Oracle + Alura

üõí Relat√≥rio do Projeto AluraStoreBr ‚Äî Desafio ONE Oracle + Alura
Este projeto tem como objetivo realizar uma an√°lise explorat√≥ria de dados de vendas da Alura Store, com base em arquivos de diferentes lojas disponibilizados no desafio da forma√ß√£o ONE Oracle + Alura. A an√°lise visa extrair informa√ß√µes √∫teis para o entendimento do desempenho das categorias de produtos, faturamento, avalia√ß√µes dos vendedores e itens mais/menos vendidos.

üì• Importa√ß√£o dos Dados
Os dados foram obtidos a partir de quatro fontes distintas (loja_1.csv at√© loja_4.csv), as quais foram unificadas em um √∫nico DataFrame para facilitar a an√°lise global. Cada linha representa uma compra, contendo informa√ß√µes como produto, categoria, vendedor, pre√ßo, quantidade de parcelas, estado de origem e avalia√ß√£o do cliente.

üí∞ Faturamento por Categoria
Ao calcular o faturamento com base no pre√ßo e na quantidade de parcelas, foi poss√≠vel identificar que as categorias com maior receita s√£o:

Eletr√¥nicos e eletrodom√©sticos, representando a maior fatia do faturamento da loja.

M√≥veis e instrumentos musicais tamb√©m mostraram desempenho relevante.

Livros e utilidades dom√©sticas geraram menor faturamento.

üåç An√°lise Geogr√°fica (Frete por Estado)
Foi feita uma an√°lise do valor m√©dio de frete por estado. Observou-se que:

Estados como Roraima (RR) e Rond√¥nia (RO) apresentaram os maiores valores m√©dios de frete.

Estados do Sul e Sudeste, como Santa Catarina (SC) e S√£o Paulo (SP), apresentaram fretes mais baixos, o que pode indicar maior proximidade de centros de distribui√ß√£o ou maior efici√™ncia log√≠stica.

‚≠ê Avalia√ß√£o dos Vendedores
Foram analisadas as avalia√ß√µes m√©dias dadas pelos clientes a cada vendedor. Os vendedores com melhor desempenho em satisfa√ß√£o do cliente foram:

Bruno Rodrigues, Felipe Santos e Mariana Ferreira, com m√©dia de avalia√ß√£o acima de 4.

A maioria dos vendedores manteve uma boa reputa√ß√£o, com m√©dias pr√≥ximas a 4 estrelas.

üì¶ Produtos Mais e Menos Vendidos
Ao agrupar os produtos pela quantidade de parcelas (como proxy de volume de vendas), os destaques foram:

Mais vendidos: Secadora de roupas, C√¥moda, Pandeiro, Bicicleta e Celular Plus X42.

Menos vendidos: produtos como Guitarra e Cafeteira tiveram menor volume de vendas, podendo indicar baixa demanda ou necessidade de estrat√©gias de marketing espec√≠ficas.

‚úÖ Conclus√£o
O projeto permitiu gerar insights importantes sobre o comportamento de vendas e satisfa√ß√£o dos clientes da Alura Store. Com os dados analisados, √© poss√≠vel:

Direcionar campanhas para categorias de menor faturamento.

Investir em log√≠stica para estados com frete elevado.

Valorizar os vendedores melhor avaliados como exemplo de boas pr√°ticas.

Este trabalho representa uma etapa essencial da forma√ß√£o em Data Science da parceria ONE Oracle + Alura, aplicando conceitos de manipula√ß√£o de dados, agrupamentos, visualiza√ß√µes e interpreta√ß√£o de resultados reais de neg√≥cio.
"""